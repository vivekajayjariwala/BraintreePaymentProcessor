{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"primeng/inputtext\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/card\";\nfunction FormComponent_small_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 11);\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 11);\n    i0.ɵɵtext(1, \"Card number is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_small_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 11);\n    i0.ɵɵtext(1, \"CVC Code is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_small_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 11);\n    i0.ɵɵtext(1, \"Expiry date is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nclass FormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required, Validators.pattern(/^[A-Za-z0-9-' ]+$/) // Regular expression pattern validator\n      ]],\n\n      number: ['', [Validators.pattern(/^\\d{13}$/) // Regular expression pattern validator for UPC code format\n      ]],\n\n      cvc: ['', [Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n      ]],\n\n      date: ['', [Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n      ]]\n    });\n  }\n\n  processPayment() {\n    console.log(this.userForm.value);\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 25,\n  vars: 6,\n  consts: [[1, \"svg-icon\"], [\"src\", \"../../assets/paypal_logo.svg\", \"alt\", \"SVG Icon\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"field\"], [1, \"block\"], [\"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"John Doe\", \"formControlName\", \"name\"], [\"class\", \"p-error-block\", 4, \"ngIf\"], [\"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"1000100010001000\", \"formControlName\", \"number\"], [\"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"000\", \"formControlName\", \"cvc\"], [\"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"0724\", \"formControlName\", \"date\"], [\"label\", \"Submit\", 3, \"disabled\"], [1, \"p-error-block\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-card\")(1, \"div\", 0);\n      i0.ɵɵelement(2, \"img\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.processPayment();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵtemplate(8, FormComponent_small_8_Template, 2, 0, \"small\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Card Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵtemplate(13, FormComponent_small_13_Template, 2, 0, \"small\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 4);\n      i0.ɵɵtext(16, \"CVC\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 8);\n      i0.ɵɵtemplate(18, FormComponent_small_18_Template, 2, 0, \"small\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 4);\n      i0.ɵɵtext(21, \"Expiry Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 9);\n      i0.ɵɵtemplate(23, FormComponent_small_23_Template, 2, 0, \"small\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"p-button\", 10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_1_0.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.userForm.get(\"number\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.userForm.get(\"number\")) == null ? null : tmp_2_0.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.userForm.get(\"cvc\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.userForm.get(\"cvc\")) == null ? null : tmp_3_0.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.userForm.get(\"date\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.userForm.get(\"date\")) == null ? null : tmp_4_0.dirty));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.InputText, i4.Button, i5.Card],\n  styles: [\".svg-icon[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: flex-start;\\n  justify-content: center;\\n  padding: 10px;\\n  position: static;\\n}\\n\\n.svg-icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 3rem;\\n  height: 5rem;\\n  display: block;\\n}\\n\\np-card[_ngcontent-%COMP%] {\\n  display: flex !important;\\n  align-items: center !important;\\n  justify-content: center !important;\\n}\\n\\ninput[_ngcontent-%COMP%], label[_ngcontent-%COMP%], small[_ngcontent-%COMP%] {\\n  display:block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZm9ybS9mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLHVCQUF1QjtFQUN2QixhQUFhO0VBQ2IsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLDhCQUE4QjtFQUM5QixrQ0FBa0M7QUFDcEM7O0FBRUE7RUFDRSxhQUFhO0FBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyIuc3ZnLWljb24ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBwb3NpdGlvbjogc3RhdGljO1xyXG59XHJcblxyXG4uc3ZnLWljb24gaW1nIHtcclxuICB3aWR0aDogM3JlbTtcclxuICBoZWlnaHQ6IDVyZW07XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbnAtY2FyZCB7XHJcbiAgZGlzcGxheTogZmxleCAhaW1wb3J0YW50O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5pbnB1dCwgbGFiZWwsIHNtYWxsIHtcclxuICBkaXNwbGF5OmJsb2NrO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { FormComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","FormComponent","constructor","fb","userForm","group","name","required","pattern","number","cvc","date","processPayment","console","log","value","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","FormComponent_Template_form_ngSubmit_3_listener","ɵɵtemplate","FormComponent_small_8_Template","FormComponent_small_13_Template","FormComponent_small_18_Template","FormComponent_small_23_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","invalid","dirty","tmp_2_0","tmp_3_0","tmp_4_0"],"sources":["C:\\Users\\Vivek Jariwala\\Documents\\AngularProjects\\BraintreePaymentProcessor\\src\\app\\form\\form.component.ts","C:\\Users\\Vivek Jariwala\\Documents\\AngularProjects\\BraintreePaymentProcessor\\src\\app\\form\\form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent {\n\n  userForm = this.fb.group({\n    name: ['', [\n      Validators.required, // Required field validator\n      Validators.pattern(/^[A-Za-z0-9-' ]+$/) // Regular expression pattern validator\n    ]],\n    number: ['', [\n      Validators.pattern(/^\\d{13}$/) // Regular expression pattern validator for UPC code format\n    ]],\n    cvc: ['', [\n      Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n    ]],\n    date: ['', [\n      Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n    ]],\n  });\n\n  constructor(private fb: FormBuilder) {};\n  processPayment() {\n    console.log(this.userForm.value);\n  }\n\n}\n","<p-card>\n  <div class=\"svg-icon\">\n    <img src=\"../../assets/paypal_logo.svg\" alt=\"SVG Icon\" />\n  </div>\n  <form [formGroup]=\"userForm\" (ngSubmit)=\"processPayment()\">\n    <div class=\"field\">\n      <label class=\"block\">Name</label>\n      <input type=\"text\" pInputText placeholder=\"John Doe\" formControlName=\"name\"/>\n      <small class=\"p-error-block\" *ngIf=\"userForm.get('name')?.invalid && userForm.get('name')?.dirty\">Name is required.</small>\n    </div>\n    <div class=\"field\">\n      <label class=\"block\">Card Number</label>\n      <input type=\"text\" pInputText placeholder=\"1000100010001000\" formControlName=\"number\"/>\n      <small class=\"p-error-block\" *ngIf=\"userForm.get('number')?.invalid && userForm.get('number')?.dirty\">Card number is required.</small>\n    </div>\n    <div class=\"field\">\n      <label class=\"block\">CVC</label>\n      <input type=\"text\" pInputText placeholder=\"000\" formControlName=\"cvc\"/>\n      <small class=\"p-error-block\" *ngIf=\"userForm.get('cvc')?.invalid && userForm.get('cvc')?.dirty\">CVC Code is required.</small>\n    </div>\n    <div class=\"field\">\n      <label class=\"block\">Expiry Date</label>\n      <input type=\"text\" pInputText placeholder=\"0724\" formControlName=\"date\"/>\n      <small class=\"p-error-block\" *ngIf=\"userForm.get('date')?.invalid && userForm.get('date')?.dirty\">Expiry date is required.</small>\n    </div>\n    <!--  <p-inputMask mask=\"99-999999\" placeholder=\"99-999999\"></p-inputMask>-->\n    <p-button label=\"Submit\"  [disabled]=\"userForm.invalid\"></p-button>\n\n  </form>\n</p-card>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}