{"ast":null,"code":"\"use strict\";\n\nlet Util = require(\"./util\").Util;\nlet ValidationError = require(\"./validation_error\").ValidationError;\nclass ValidationErrorsCollection {\n  constructor(errorAttributes) {\n    this.validationErrors = {};\n    this.errorCollections = {};\n    for (let key in errorAttributes) {\n      if (!errorAttributes.hasOwnProperty(key)) {\n        continue;\n      }\n      let val = errorAttributes[key];\n      if (key === \"errors\") {\n        this.buildErrors(val);\n      } else {\n        this.errorCollections[key] = new ValidationErrorsCollection(val);\n      }\n    }\n  }\n  buildErrors(errors) {\n    return errors.map(item => {\n      let key = Util.toCamelCase(item.attribute);\n      this.validationErrors[key] = this.validationErrors[key] || [];\n      return this.validationErrors[key].push(new ValidationError(item));\n    });\n  }\n  deepErrors() {\n    let errors = [];\n    for (let key in this.validationErrors) {\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      let val = this.validationErrors[key];\n      errors = errors.concat(val);\n    }\n    for (let key in this.errorCollections) {\n      if (!this.errorCollections.hasOwnProperty(key)) {\n        continue;\n      }\n      let val = this.errorCollections[key];\n      errors = errors.concat(val.deepErrors());\n    }\n    return errors;\n  }\n  for(name) {\n    return this.errorCollections[name];\n  }\n  forIndex(index) {\n    return this.errorCollections[`index${index}`];\n  }\n  on(name) {\n    return this.validationErrors[name];\n  }\n}\nmodule.exports = {\n  ValidationErrorsCollection: ValidationErrorsCollection\n};","map":{"version":3,"names":["Util","require","ValidationError","ValidationErrorsCollection","constructor","errorAttributes","validationErrors","errorCollections","key","hasOwnProperty","val","buildErrors","errors","map","item","toCamelCase","attribute","push","deepErrors","concat","for","name","forIndex","index","on","module","exports"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/lib/braintree/validation_errors_collection.js"],"sourcesContent":["\"use strict\";\n\nlet Util = require(\"./util\").Util;\nlet ValidationError = require(\"./validation_error\").ValidationError;\n\nclass ValidationErrorsCollection {\n  constructor(errorAttributes) {\n    this.validationErrors = {};\n    this.errorCollections = {};\n\n    for (let key in errorAttributes) {\n      if (!errorAttributes.hasOwnProperty(key)) {\n        continue;\n      }\n      let val = errorAttributes[key];\n\n      if (key === \"errors\") {\n        this.buildErrors(val);\n      } else {\n        this.errorCollections[key] = new ValidationErrorsCollection(val);\n      }\n    }\n  }\n\n  buildErrors(errors) {\n    return errors.map((item) => {\n      let key = Util.toCamelCase(item.attribute);\n\n      this.validationErrors[key] = this.validationErrors[key] || [];\n\n      return this.validationErrors[key].push(new ValidationError(item));\n    });\n  }\n\n  deepErrors() {\n    let errors = [];\n\n    for (let key in this.validationErrors) {\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      let val = this.validationErrors[key];\n\n      errors = errors.concat(val);\n    }\n\n    for (let key in this.errorCollections) {\n      if (!this.errorCollections.hasOwnProperty(key)) {\n        continue;\n      }\n      let val = this.errorCollections[key];\n\n      errors = errors.concat(val.deepErrors());\n    }\n\n    return errors;\n  }\n\n  for(name) {\n    return this.errorCollections[name];\n  }\n\n  forIndex(index) {\n    return this.errorCollections[`index${index}`];\n  }\n\n  on(name) {\n    return this.validationErrors[name];\n  }\n}\n\nmodule.exports = { ValidationErrorsCollection: ValidationErrorsCollection };\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,IAAI;AACjC,IAAIE,eAAe,GAAGD,OAAO,CAAC,oBAAoB,CAAC,CAACC,eAAe;AAEnE,MAAMC,0BAA0B,CAAC;EAC/BC,WAAWA,CAACC,eAAe,EAAE;IAC3B,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC;IAC1B,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC;IAE1B,KAAK,IAAIC,GAAG,IAAIH,eAAe,EAAE;MAC/B,IAAI,CAACA,eAAe,CAACI,cAAc,CAACD,GAAG,CAAC,EAAE;QACxC;MACF;MACA,IAAIE,GAAG,GAAGL,eAAe,CAACG,GAAG,CAAC;MAE9B,IAAIA,GAAG,KAAK,QAAQ,EAAE;QACpB,IAAI,CAACG,WAAW,CAACD,GAAG,CAAC;MACvB,CAAC,MAAM;QACL,IAAI,CAACH,gBAAgB,CAACC,GAAG,CAAC,GAAG,IAAIL,0BAA0B,CAACO,GAAG,CAAC;MAClE;IACF;EACF;EAEAC,WAAWA,CAACC,MAAM,EAAE;IAClB,OAAOA,MAAM,CAACC,GAAG,CAAEC,IAAI,IAAK;MAC1B,IAAIN,GAAG,GAAGR,IAAI,CAACe,WAAW,CAACD,IAAI,CAACE,SAAS,CAAC;MAE1C,IAAI,CAACV,gBAAgB,CAACE,GAAG,CAAC,GAAG,IAAI,CAACF,gBAAgB,CAACE,GAAG,CAAC,IAAI,EAAE;MAE7D,OAAO,IAAI,CAACF,gBAAgB,CAACE,GAAG,CAAC,CAACS,IAAI,CAAC,IAAIf,eAAe,CAACY,IAAI,CAAC,CAAC;IACnE,CAAC,CAAC;EACJ;EAEAI,UAAUA,CAAA,EAAG;IACX,IAAIN,MAAM,GAAG,EAAE;IAEf,KAAK,IAAIJ,GAAG,IAAI,IAAI,CAACF,gBAAgB,EAAE;MACrC,IAAI,CAAC,IAAI,CAACA,gBAAgB,CAACG,cAAc,CAACD,GAAG,CAAC,EAAE;QAC9C;MACF;MACA,IAAIE,GAAG,GAAG,IAAI,CAACJ,gBAAgB,CAACE,GAAG,CAAC;MAEpCI,MAAM,GAAGA,MAAM,CAACO,MAAM,CAACT,GAAG,CAAC;IAC7B;IAEA,KAAK,IAAIF,GAAG,IAAI,IAAI,CAACD,gBAAgB,EAAE;MACrC,IAAI,CAAC,IAAI,CAACA,gBAAgB,CAACE,cAAc,CAACD,GAAG,CAAC,EAAE;QAC9C;MACF;MACA,IAAIE,GAAG,GAAG,IAAI,CAACH,gBAAgB,CAACC,GAAG,CAAC;MAEpCI,MAAM,GAAGA,MAAM,CAACO,MAAM,CAACT,GAAG,CAACQ,UAAU,CAAC,CAAC,CAAC;IAC1C;IAEA,OAAON,MAAM;EACf;EAEAQ,GAAGA,CAACC,IAAI,EAAE;IACR,OAAO,IAAI,CAACd,gBAAgB,CAACc,IAAI,CAAC;EACpC;EAEAC,QAAQA,CAACC,KAAK,EAAE;IACd,OAAO,IAAI,CAAChB,gBAAgB,CAAE,QAAOgB,KAAM,EAAC,CAAC;EAC/C;EAEAC,EAAEA,CAACH,IAAI,EAAE;IACP,OAAO,IAAI,CAACf,gBAAgB,CAACe,IAAI,CAAC;EACpC;AACF;AAEAI,MAAM,CAACC,OAAO,GAAG;EAAEvB,0BAA0B,EAAEA;AAA2B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}