{"ast":null,"code":"\"use strict\";\n\nlet ApplePayCard = require(\"./apple_pay_card\").ApplePayCard;\nlet AndroidPayCard = require(\"./android_pay_card\").AndroidPayCard;\nlet CreditCard = require(\"./credit_card\").CreditCard;\nlet PayPalAccount = require(\"./paypal_account\").PayPalAccount;\nlet UnknownPaymentMethod = require(\"./unknown_payment_method\").UnknownPaymentMethod;\nlet PaymentMethodNonce = require(\"./payment_method_nonce\").PaymentMethodNonce;\nlet UsBankAccount = require(\"./us_bank_account\").UsBankAccount;\nlet VenmoAccount = require(\"./venmo_account\").VenmoAccount;\nlet VisaCheckoutCard = require(\"./visa_checkout_card\").VisaCheckoutCard;\nlet SamsungPayCard = require(\"./samsung_pay_card\").SamsungPayCard;\nlet SepaDirectDebitAccount = require(\"./sepa_direct_debit_account\").SepaDirectDebitAccount;\nclass PaymentMethodParser {\n  static parsePaymentMethod(response) {\n    if (response.creditCard) {\n      return new CreditCard(response.creditCard);\n    } else if (response.paypalAccount) {\n      return new PayPalAccount(response.paypalAccount);\n    } else if (response.applePayCard) {\n      return new ApplePayCard(response.applePayCard);\n    } else if (response.androidPayCard) {\n      // NEXT_MAJOR_VERSION rename Android Pay to Google Pay\n      return new AndroidPayCard(response.androidPayCard);\n    } else if (response.paymentMethodNonce) {\n      return new PaymentMethodNonce(response.paymentMethodNonce);\n    } else if (response.usBankAccount) {\n      return new UsBankAccount(response.usBankAccount);\n    } else if (response.venmoAccount) {\n      return new VenmoAccount(response.venmoAccount);\n    } else if (response.visaCheckoutCard) {\n      return new VisaCheckoutCard(response.visaCheckoutCard);\n    } else if (response.samsungPayCard) {\n      return new SamsungPayCard(response.samsungPayCard);\n    } else if (response.sepaDebitAccount) {\n      return new SepaDirectDebitAccount(response.sepaDebitAccount);\n    }\n    return new UnknownPaymentMethod(response);\n  }\n}\nmodule.exports = {\n  PaymentMethodParser: PaymentMethodParser\n};","map":{"version":3,"names":["ApplePayCard","require","AndroidPayCard","CreditCard","PayPalAccount","UnknownPaymentMethod","PaymentMethodNonce","UsBankAccount","VenmoAccount","VisaCheckoutCard","SamsungPayCard","SepaDirectDebitAccount","PaymentMethodParser","parsePaymentMethod","response","creditCard","paypalAccount","applePayCard","androidPayCard","paymentMethodNonce","usBankAccount","venmoAccount","visaCheckoutCard","samsungPayCard","sepaDebitAccount","module","exports"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/lib/braintree/payment_method_parser.js"],"sourcesContent":["\"use strict\";\n\nlet ApplePayCard = require(\"./apple_pay_card\").ApplePayCard;\nlet AndroidPayCard = require(\"./android_pay_card\").AndroidPayCard;\nlet CreditCard = require(\"./credit_card\").CreditCard;\nlet PayPalAccount = require(\"./paypal_account\").PayPalAccount;\nlet UnknownPaymentMethod =\n  require(\"./unknown_payment_method\").UnknownPaymentMethod;\nlet PaymentMethodNonce = require(\"./payment_method_nonce\").PaymentMethodNonce;\nlet UsBankAccount = require(\"./us_bank_account\").UsBankAccount;\nlet VenmoAccount = require(\"./venmo_account\").VenmoAccount;\nlet VisaCheckoutCard = require(\"./visa_checkout_card\").VisaCheckoutCard;\nlet SamsungPayCard = require(\"./samsung_pay_card\").SamsungPayCard;\nlet SepaDirectDebitAccount =\n  require(\"./sepa_direct_debit_account\").SepaDirectDebitAccount;\n\nclass PaymentMethodParser {\n  static parsePaymentMethod(response) {\n    if (response.creditCard) {\n      return new CreditCard(response.creditCard);\n    } else if (response.paypalAccount) {\n      return new PayPalAccount(response.paypalAccount);\n    } else if (response.applePayCard) {\n      return new ApplePayCard(response.applePayCard);\n    } else if (response.androidPayCard) {\n      // NEXT_MAJOR_VERSION rename Android Pay to Google Pay\n      return new AndroidPayCard(response.androidPayCard);\n    } else if (response.paymentMethodNonce) {\n      return new PaymentMethodNonce(response.paymentMethodNonce);\n    } else if (response.usBankAccount) {\n      return new UsBankAccount(response.usBankAccount);\n    } else if (response.venmoAccount) {\n      return new VenmoAccount(response.venmoAccount);\n    } else if (response.visaCheckoutCard) {\n      return new VisaCheckoutCard(response.visaCheckoutCard);\n    } else if (response.samsungPayCard) {\n      return new SamsungPayCard(response.samsungPayCard);\n    } else if (response.sepaDebitAccount) {\n      return new SepaDirectDebitAccount(response.sepaDebitAccount);\n    }\n\n    return new UnknownPaymentMethod(response);\n  }\n}\n\nmodule.exports = { PaymentMethodParser: PaymentMethodParser };\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,kBAAkB,CAAC,CAACD,YAAY;AAC3D,IAAIE,cAAc,GAAGD,OAAO,CAAC,oBAAoB,CAAC,CAACC,cAAc;AACjE,IAAIC,UAAU,GAAGF,OAAO,CAAC,eAAe,CAAC,CAACE,UAAU;AACpD,IAAIC,aAAa,GAAGH,OAAO,CAAC,kBAAkB,CAAC,CAACG,aAAa;AAC7D,IAAIC,oBAAoB,GACtBJ,OAAO,CAAC,0BAA0B,CAAC,CAACI,oBAAoB;AAC1D,IAAIC,kBAAkB,GAAGL,OAAO,CAAC,wBAAwB,CAAC,CAACK,kBAAkB;AAC7E,IAAIC,aAAa,GAAGN,OAAO,CAAC,mBAAmB,CAAC,CAACM,aAAa;AAC9D,IAAIC,YAAY,GAAGP,OAAO,CAAC,iBAAiB,CAAC,CAACO,YAAY;AAC1D,IAAIC,gBAAgB,GAAGR,OAAO,CAAC,sBAAsB,CAAC,CAACQ,gBAAgB;AACvE,IAAIC,cAAc,GAAGT,OAAO,CAAC,oBAAoB,CAAC,CAACS,cAAc;AACjE,IAAIC,sBAAsB,GACxBV,OAAO,CAAC,6BAA6B,CAAC,CAACU,sBAAsB;AAE/D,MAAMC,mBAAmB,CAAC;EACxB,OAAOC,kBAAkBA,CAACC,QAAQ,EAAE;IAClC,IAAIA,QAAQ,CAACC,UAAU,EAAE;MACvB,OAAO,IAAIZ,UAAU,CAACW,QAAQ,CAACC,UAAU,CAAC;IAC5C,CAAC,MAAM,IAAID,QAAQ,CAACE,aAAa,EAAE;MACjC,OAAO,IAAIZ,aAAa,CAACU,QAAQ,CAACE,aAAa,CAAC;IAClD,CAAC,MAAM,IAAIF,QAAQ,CAACG,YAAY,EAAE;MAChC,OAAO,IAAIjB,YAAY,CAACc,QAAQ,CAACG,YAAY,CAAC;IAChD,CAAC,MAAM,IAAIH,QAAQ,CAACI,cAAc,EAAE;MAClC;MACA,OAAO,IAAIhB,cAAc,CAACY,QAAQ,CAACI,cAAc,CAAC;IACpD,CAAC,MAAM,IAAIJ,QAAQ,CAACK,kBAAkB,EAAE;MACtC,OAAO,IAAIb,kBAAkB,CAACQ,QAAQ,CAACK,kBAAkB,CAAC;IAC5D,CAAC,MAAM,IAAIL,QAAQ,CAACM,aAAa,EAAE;MACjC,OAAO,IAAIb,aAAa,CAACO,QAAQ,CAACM,aAAa,CAAC;IAClD,CAAC,MAAM,IAAIN,QAAQ,CAACO,YAAY,EAAE;MAChC,OAAO,IAAIb,YAAY,CAACM,QAAQ,CAACO,YAAY,CAAC;IAChD,CAAC,MAAM,IAAIP,QAAQ,CAACQ,gBAAgB,EAAE;MACpC,OAAO,IAAIb,gBAAgB,CAACK,QAAQ,CAACQ,gBAAgB,CAAC;IACxD,CAAC,MAAM,IAAIR,QAAQ,CAACS,cAAc,EAAE;MAClC,OAAO,IAAIb,cAAc,CAACI,QAAQ,CAACS,cAAc,CAAC;IACpD,CAAC,MAAM,IAAIT,QAAQ,CAACU,gBAAgB,EAAE;MACpC,OAAO,IAAIb,sBAAsB,CAACG,QAAQ,CAACU,gBAAgB,CAAC;IAC9D;IAEA,OAAO,IAAInB,oBAAoB,CAACS,QAAQ,CAAC;EAC3C;AACF;AAEAW,MAAM,CAACC,OAAO,GAAG;EAAEd,mBAAmB,EAAEA;AAAoB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}