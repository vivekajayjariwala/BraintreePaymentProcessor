{"ast":null,"code":"\"use strict\";\n\nlet AttributeSetter = require(\"./attribute_setter\").AttributeSetter;\nlet CreditCardVerification = require(\"./credit_card_verification\").CreditCardVerification;\nclass CreditCard extends AttributeSetter {\n  static initClass() {\n    this.CardType = {\n      AmEx: \"American Express\",\n      CarteBlanche: \"Carte Blanche\",\n      ChinaUnionPay: \"China UnionPay\",\n      DinersClubInternational: \"Diners Club\",\n      Discover: \"Discover\",\n      Elo: \"Elo\",\n      JCB: \"JCB\",\n      Laser: \"Laser\",\n      UKMaestro: \"UK Maestro\",\n      Maestro: \"Maestro\",\n      MasterCard: \"MasterCard\",\n      Solo: \"Solo\",\n      Switch: \"Switch\",\n      Visa: \"Visa\",\n      Unknown: \"Unknown\",\n      All() {\n        let all = [];\n        for (let key in this) {\n          if (!this.hasOwnProperty(key)) {\n            continue;\n          }\n          let value = this[key];\n          if (key !== \"All\") {\n            all.push(value);\n          }\n        }\n        return all;\n      }\n    };\n    this.CustomerLocation = {\n      International: \"international\",\n      US: \"us\"\n    };\n    this.CardTypeIndicator = {\n      Yes: \"Yes\",\n      No: \"No\",\n      Unknown: \"Unknown\"\n    };\n    this.Prepaid = this.Commercial = this.Payroll = this.Healthcare = this.DurbinRegulated = this.Debit = this.CountryOfIssuance = this.IssuingBank = this.ProductId = this.CardTypeIndicator;\n  }\n  constructor(attributes) {\n    super(attributes);\n    this.maskedNumber = `${this.bin}******${this.last4}`;\n    this.expirationDate = `${this.expirationMonth}/${this.expirationYear}`;\n    if (attributes) {\n      let sortedVerifications = (attributes.verifications || []).sort((a, b) => b.created_at - a.created_at);\n      if (sortedVerifications[0]) {\n        this.verification = new CreditCardVerification(sortedVerifications[0]);\n      }\n    }\n  }\n}\nCreditCard.initClass();\nmodule.exports = {\n  CreditCard: CreditCard\n};","map":{"version":3,"names":["AttributeSetter","require","CreditCardVerification","CreditCard","initClass","CardType","AmEx","CarteBlanche","ChinaUnionPay","DinersClubInternational","Discover","Elo","JCB","Laser","UKMaestro","Maestro","MasterCard","Solo","Switch","Visa","Unknown","All","all","key","hasOwnProperty","value","push","CustomerLocation","International","US","CardTypeIndicator","Yes","No","Prepaid","Commercial","Payroll","Healthcare","DurbinRegulated","Debit","CountryOfIssuance","IssuingBank","ProductId","constructor","attributes","maskedNumber","bin","last4","expirationDate","expirationMonth","expirationYear","sortedVerifications","verifications","sort","a","b","created_at","verification","module","exports"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/lib/braintree/credit_card.js"],"sourcesContent":["\"use strict\";\n\nlet AttributeSetter = require(\"./attribute_setter\").AttributeSetter;\nlet CreditCardVerification =\n  require(\"./credit_card_verification\").CreditCardVerification;\n\nclass CreditCard extends AttributeSetter {\n  static initClass() {\n    this.CardType = {\n      AmEx: \"American Express\",\n      CarteBlanche: \"Carte Blanche\",\n      ChinaUnionPay: \"China UnionPay\",\n      DinersClubInternational: \"Diners Club\",\n      Discover: \"Discover\",\n      Elo: \"Elo\",\n      JCB: \"JCB\",\n      Laser: \"Laser\",\n      UKMaestro: \"UK Maestro\",\n      Maestro: \"Maestro\",\n      MasterCard: \"MasterCard\",\n      Solo: \"Solo\",\n      Switch: \"Switch\",\n      Visa: \"Visa\",\n      Unknown: \"Unknown\",\n      All() {\n        let all = [];\n\n        for (let key in this) {\n          if (!this.hasOwnProperty(key)) {\n            continue;\n          }\n          let value = this[key];\n\n          if (key !== \"All\") {\n            all.push(value);\n          }\n        }\n\n        return all;\n      },\n    };\n\n    this.CustomerLocation = {\n      International: \"international\",\n      US: \"us\",\n    };\n\n    this.CardTypeIndicator = {\n      Yes: \"Yes\",\n      No: \"No\",\n      Unknown: \"Unknown\",\n    };\n\n    this.Prepaid =\n      this.Commercial =\n      this.Payroll =\n      this.Healthcare =\n      this.DurbinRegulated =\n      this.Debit =\n      this.CountryOfIssuance =\n      this.IssuingBank =\n      this.ProductId =\n        this.CardTypeIndicator;\n  }\n\n  constructor(attributes) {\n    super(attributes);\n    this.maskedNumber = `${this.bin}******${this.last4}`;\n    this.expirationDate = `${this.expirationMonth}/${this.expirationYear}`;\n    if (attributes) {\n      let sortedVerifications = (attributes.verifications || []).sort(\n        (a, b) => b.created_at - a.created_at\n      );\n\n      if (sortedVerifications[0]) {\n        this.verification = new CreditCardVerification(sortedVerifications[0]);\n      }\n    }\n  }\n}\nCreditCard.initClass();\n\nmodule.exports = { CreditCard: CreditCard };\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,eAAe,GAAGC,OAAO,CAAC,oBAAoB,CAAC,CAACD,eAAe;AACnE,IAAIE,sBAAsB,GACxBD,OAAO,CAAC,4BAA4B,CAAC,CAACC,sBAAsB;AAE9D,MAAMC,UAAU,SAASH,eAAe,CAAC;EACvC,OAAOI,SAASA,CAAA,EAAG;IACjB,IAAI,CAACC,QAAQ,GAAG;MACdC,IAAI,EAAE,kBAAkB;MACxBC,YAAY,EAAE,eAAe;MAC7BC,aAAa,EAAE,gBAAgB;MAC/BC,uBAAuB,EAAE,aAAa;MACtCC,QAAQ,EAAE,UAAU;MACpBC,GAAG,EAAE,KAAK;MACVC,GAAG,EAAE,KAAK;MACVC,KAAK,EAAE,OAAO;MACdC,SAAS,EAAE,YAAY;MACvBC,OAAO,EAAE,SAAS;MAClBC,UAAU,EAAE,YAAY;MACxBC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE,QAAQ;MAChBC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE,SAAS;MAClBC,GAAGA,CAAA,EAAG;QACJ,IAAIC,GAAG,GAAG,EAAE;QAEZ,KAAK,IAAIC,GAAG,IAAI,IAAI,EAAE;UACpB,IAAI,CAAC,IAAI,CAACC,cAAc,CAACD,GAAG,CAAC,EAAE;YAC7B;UACF;UACA,IAAIE,KAAK,GAAG,IAAI,CAACF,GAAG,CAAC;UAErB,IAAIA,GAAG,KAAK,KAAK,EAAE;YACjBD,GAAG,CAACI,IAAI,CAACD,KAAK,CAAC;UACjB;QACF;QAEA,OAAOH,GAAG;MACZ;IACF,CAAC;IAED,IAAI,CAACK,gBAAgB,GAAG;MACtBC,aAAa,EAAE,eAAe;MAC9BC,EAAE,EAAE;IACN,CAAC;IAED,IAAI,CAACC,iBAAiB,GAAG;MACvBC,GAAG,EAAE,KAAK;MACVC,EAAE,EAAE,IAAI;MACRZ,OAAO,EAAE;IACX,CAAC;IAED,IAAI,CAACa,OAAO,GACV,IAAI,CAACC,UAAU,GACf,IAAI,CAACC,OAAO,GACZ,IAAI,CAACC,UAAU,GACf,IAAI,CAACC,eAAe,GACpB,IAAI,CAACC,KAAK,GACV,IAAI,CAACC,iBAAiB,GACtB,IAAI,CAACC,WAAW,GAChB,IAAI,CAACC,SAAS,GACZ,IAAI,CAACX,iBAAiB;EAC5B;EAEAY,WAAWA,CAACC,UAAU,EAAE;IACtB,KAAK,CAACA,UAAU,CAAC;IACjB,IAAI,CAACC,YAAY,GAAI,GAAE,IAAI,CAACC,GAAI,SAAQ,IAAI,CAACC,KAAM,EAAC;IACpD,IAAI,CAACC,cAAc,GAAI,GAAE,IAAI,CAACC,eAAgB,IAAG,IAAI,CAACC,cAAe,EAAC;IACtE,IAAIN,UAAU,EAAE;MACd,IAAIO,mBAAmB,GAAG,CAACP,UAAU,CAACQ,aAAa,IAAI,EAAE,EAAEC,IAAI,CAC7D,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,UAAU,GAAGF,CAAC,CAACE,UAC7B,CAAC;MAED,IAAIL,mBAAmB,CAAC,CAAC,CAAC,EAAE;QAC1B,IAAI,CAACM,YAAY,GAAG,IAAItD,sBAAsB,CAACgD,mBAAmB,CAAC,CAAC,CAAC,CAAC;MACxE;IACF;EACF;AACF;AACA/C,UAAU,CAACC,SAAS,CAAC,CAAC;AAEtBqD,MAAM,CAACC,OAAO,GAAG;EAAEvD,UAAU,EAAEA;AAAW,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}