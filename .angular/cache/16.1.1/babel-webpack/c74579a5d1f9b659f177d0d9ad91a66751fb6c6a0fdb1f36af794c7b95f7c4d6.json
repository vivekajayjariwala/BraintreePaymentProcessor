{"ast":null,"code":"\"use strict\";\n\nlet AttributeSetter = require(\"./attribute_setter\").AttributeSetter;\nlet Transaction = require(\"./transaction\").Transaction;\nclass Subscription extends AttributeSetter {\n  static initClass() {\n    this.Source = {\n      Api: \"api\",\n      ControlPanel: \"control_panel\",\n      Recurring: \"recurring\"\n    };\n    this.Status = {\n      Active: \"Active\",\n      Canceled: \"Canceled\",\n      Expired: \"Expired\",\n      PastDue: \"Past Due\",\n      Pending: \"Pending\",\n      All() {\n        let all = [];\n        for (let key in this) {\n          if (!this.hasOwnProperty(key)) {\n            continue;\n          }\n          let value = this[key];\n          if (key !== \"All\") {\n            all.push(value);\n          }\n        }\n        return all;\n      }\n    };\n  }\n  constructor(attributes, gateway) {\n    super(attributes, gateway);\n    this.transactions = attributes.transactions.map(transactionAttributes => new Transaction(transactionAttributes, gateway));\n  }\n}\nSubscription.initClass();\nmodule.exports = {\n  Subscription: Subscription\n};","map":{"version":3,"names":["AttributeSetter","require","Transaction","Subscription","initClass","Source","Api","ControlPanel","Recurring","Status","Active","Canceled","Expired","PastDue","Pending","All","all","key","hasOwnProperty","value","push","constructor","attributes","gateway","transactions","map","transactionAttributes","module","exports"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/lib/braintree/subscription.js"],"sourcesContent":["\"use strict\";\n\nlet AttributeSetter = require(\"./attribute_setter\").AttributeSetter;\nlet Transaction = require(\"./transaction\").Transaction;\n\nclass Subscription extends AttributeSetter {\n  static initClass() {\n    this.Source = {\n      Api: \"api\",\n      ControlPanel: \"control_panel\",\n      Recurring: \"recurring\",\n    };\n\n    this.Status = {\n      Active: \"Active\",\n      Canceled: \"Canceled\",\n      Expired: \"Expired\",\n      PastDue: \"Past Due\",\n      Pending: \"Pending\",\n      All() {\n        let all = [];\n\n        for (let key in this) {\n          if (!this.hasOwnProperty(key)) {\n            continue;\n          }\n          let value = this[key];\n\n          if (key !== \"All\") {\n            all.push(value);\n          }\n        }\n\n        return all;\n      },\n    };\n  }\n\n  constructor(attributes, gateway) {\n    super(attributes, gateway);\n    this.transactions = attributes.transactions.map(\n      (transactionAttributes) => new Transaction(transactionAttributes, gateway)\n    );\n  }\n}\nSubscription.initClass();\n\nmodule.exports = { Subscription: Subscription };\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,eAAe,GAAGC,OAAO,CAAC,oBAAoB,CAAC,CAACD,eAAe;AACnE,IAAIE,WAAW,GAAGD,OAAO,CAAC,eAAe,CAAC,CAACC,WAAW;AAEtD,MAAMC,YAAY,SAASH,eAAe,CAAC;EACzC,OAAOI,SAASA,CAAA,EAAG;IACjB,IAAI,CAACC,MAAM,GAAG;MACZC,GAAG,EAAE,KAAK;MACVC,YAAY,EAAE,eAAe;MAC7BC,SAAS,EAAE;IACb,CAAC;IAED,IAAI,CAACC,MAAM,GAAG;MACZC,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAE,UAAU;MACpBC,OAAO,EAAE,SAAS;MAClBC,OAAO,EAAE,UAAU;MACnBC,OAAO,EAAE,SAAS;MAClBC,GAAGA,CAAA,EAAG;QACJ,IAAIC,GAAG,GAAG,EAAE;QAEZ,KAAK,IAAIC,GAAG,IAAI,IAAI,EAAE;UACpB,IAAI,CAAC,IAAI,CAACC,cAAc,CAACD,GAAG,CAAC,EAAE;YAC7B;UACF;UACA,IAAIE,KAAK,GAAG,IAAI,CAACF,GAAG,CAAC;UAErB,IAAIA,GAAG,KAAK,KAAK,EAAE;YACjBD,GAAG,CAACI,IAAI,CAACD,KAAK,CAAC;UACjB;QACF;QAEA,OAAOH,GAAG;MACZ;IACF,CAAC;EACH;EAEAK,WAAWA,CAACC,UAAU,EAAEC,OAAO,EAAE;IAC/B,KAAK,CAACD,UAAU,EAAEC,OAAO,CAAC;IAC1B,IAAI,CAACC,YAAY,GAAGF,UAAU,CAACE,YAAY,CAACC,GAAG,CAC5CC,qBAAqB,IAAK,IAAIxB,WAAW,CAACwB,qBAAqB,EAAEH,OAAO,CAC3E,CAAC;EACH;AACF;AACApB,YAAY,CAACC,SAAS,CAAC,CAAC;AAExBuB,MAAM,CAACC,OAAO,GAAG;EAAEzB,YAAY,EAAEA;AAAa,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}