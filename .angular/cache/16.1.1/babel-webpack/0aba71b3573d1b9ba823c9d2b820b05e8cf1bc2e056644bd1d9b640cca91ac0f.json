{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nclass FormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.userForm = this.fb.group({\n      number: ['', [Validators.pattern(/^\\d{13}$/) // Regular expression pattern validator for UPC code format\n      ]],\n\n      cvc: ['', [Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n      ]],\n\n      date: ['', [Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n      ]],\n\n      random: ['', [Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n      ]]\n    });\n  }\n\n  processPayment() {\n    console.log(this.userForm.value);\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"svg-icon\"], [\"src\", \"../../assets/paypal_logo.svg\", \"alt\", \"SVG Icon\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"field\"], [\"for\", \"number\"], [\"type\", \"submit\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"img\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.processPayment();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelement(4, \"label\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 5);\n      i0.ɵɵtext(6, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective],\n  styles: [\".svg-icon[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: flex-start;\\n  justify-content: center;\\n  padding: 20px;\\n}\\n\\n.svg-icon[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 11rem;\\n  height: 5rem;\\n  display: block;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZm9ybS9mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLHVCQUF1QjtFQUN2QixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLGNBQWM7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuc3ZnLWljb24ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuLnN2Zy1pY29uIGltZyB7XHJcbiAgd2lkdGg6IDExcmVtO1xyXG4gIGhlaWdodDogNXJlbTtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { FormComponent };","map":{"version":3,"names":["Validators","FormComponent","constructor","fb","userForm","group","number","pattern","cvc","date","random","processPayment","console","log","value","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","FormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","FormComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Vivek Jariwala\\Documents\\AngularProjects\\BraintreePaymentProcessor\\src\\app\\form\\form.component.ts","C:\\Users\\Vivek Jariwala\\Documents\\AngularProjects\\BraintreePaymentProcessor\\src\\app\\form\\form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent {\n\n  userForm = this.fb.group({\n    number: ['', [\n      Validators.pattern(/^\\d{13}$/) // Regular expression pattern validator for UPC code format\n    ]],\n    cvc: ['', [\n      Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n    ]],\n    date: ['', [\n      Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n    ]],\n    random: ['', [\n      Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n    ]],\n  });\n\n  constructor(private fb: FormBuilder) {}\n\n  processPayment() {\n    console.log(this.userForm.value);\n  }\n\n}\n","<div class=\"svg-icon\">\n  <img src=\"../../assets/paypal_logo.svg\" alt=\"SVG Icon\" />\n</div>\n<form [formGroup]=\"userForm\" (ngSubmit)=\"processPayment()\">\n  <div class=\"field\">\n    <label for=\"number\"></label>\n  </div>\n<!--  <p-inputMask mask=\"99-999999\" placeholder=\"99-999999\"></p-inputMask>-->\n  <button type=\"submit\">Submit</button>\n\n</form>\n"],"mappings":"AACA,SAAqBA,UAAU,QAAO,gBAAgB;;;AAEtD,MAKaC,aAAa;EAiBxBC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IAftB,KAAAC,QAAQ,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACvBC,MAAM,EAAE,CAAC,EAAE,EAAE,CACXN,UAAU,CAACO,OAAO,CAAC,UAAU,CAAC,CAAC;MAAA,CAChC,CAAC;;MACFC,GAAG,EAAE,CAAC,EAAE,EAAE,CACRR,UAAU,CAACO,OAAO,CAAC,SAAS,CAAC,CAAC;MAAA,CAC/B,CAAC;;MACFE,IAAI,EAAE,CAAC,EAAE,EAAE,CACTT,UAAU,CAACO,OAAO,CAAC,SAAS,CAAC,CAAC;MAAA,CAC/B,CAAC;;MACFG,MAAM,EAAE,CAAC,EAAE,EAAE,CACXV,UAAU,CAACO,OAAO,CAAC,SAAS,CAAC,CAAC;MAAA,CAC/B;KACF,CAAC;EAEoC;;EAEtCI,cAAcA,CAAA;IACZC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACT,QAAQ,CAACU,KAAK,CAAC;EAClC;;AArBWb,aAAa,C;mBAAbA,aAAa,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAbjB,aAAa,C;QAAbA,aAAa;EAAAkB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR1BV,EAAA,CAAAY,cAAA,aAAsB;MACpBZ,EAAA,CAAAa,SAAA,aAAyD;MAC3Db,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,cAA2D;MAA9BZ,EAAA,CAAAe,UAAA,sBAAAC,gDAAA;QAAA,OAAYL,GAAA,CAAAf,cAAA,EAAgB;MAAA,EAAC;MACxDI,EAAA,CAAAY,cAAA,aAAmB;MACjBZ,EAAA,CAAAa,SAAA,eAA4B;MAC9Bb,EAAA,CAAAc,YAAA,EAAM;MAENd,EAAA,CAAAY,cAAA,gBAAsB;MAAAZ,EAAA,CAAAiB,MAAA,aAAM;MAAAjB,EAAA,CAAAc,YAAA,EAAS;;;MALjCd,EAAA,CAAAkB,SAAA,GAAsB;MAAtBlB,EAAA,CAAAmB,UAAA,cAAAR,GAAA,CAAAtB,QAAA,CAAsB;;;;;;SDKfH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}