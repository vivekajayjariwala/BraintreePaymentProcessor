{"ast":null,"code":"\"use strict\";\n\nlet Gateway = require(\"./gateway\").Gateway;\nlet Merchant = require(\"./merchant\").Merchant;\nlet OAuthCredentials = require(\"./oauth_credentials\").OAuthCredentials;\nlet wrapPrototype = require(\"@braintree/wrap-promise\").wrapPrototype;\nclass MerchantGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n  create(attributes) {\n    return this.gateway.http.post(\"/merchants/create_via_api\", {\n      merchant: attributes\n    }).then(this.responseHandler());\n  }\n  responseHandler() {\n    let handler = this.createResponseHandler(null, null);\n    return function (payload) {\n      return handler(payload).then(response => {\n        if (response.success) {\n          response.merchant = new Merchant(response.response.merchant);\n          response.credentials = new OAuthCredentials(response.response.credentials);\n          delete response.response;\n        }\n        return response;\n      });\n    };\n  }\n}\nmodule.exports = {\n  MerchantGateway: wrapPrototype(MerchantGateway)\n};","map":{"version":3,"names":["Gateway","require","Merchant","OAuthCredentials","wrapPrototype","MerchantGateway","constructor","gateway","config","create","attributes","http","post","merchant","then","responseHandler","handler","createResponseHandler","payload","response","success","credentials","module","exports"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/lib/braintree/merchant_gateway.js"],"sourcesContent":["\"use strict\";\n\nlet Gateway = require(\"./gateway\").Gateway;\nlet Merchant = require(\"./merchant\").Merchant;\nlet OAuthCredentials = require(\"./oauth_credentials\").OAuthCredentials;\nlet wrapPrototype = require(\"@braintree/wrap-promise\").wrapPrototype;\n\nclass MerchantGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  create(attributes) {\n    return this.gateway.http\n      .post(\"/merchants/create_via_api\", { merchant: attributes })\n      .then(this.responseHandler());\n  }\n\n  responseHandler() {\n    let handler = this.createResponseHandler(null, null);\n\n    return function (payload) {\n      return handler(payload).then((response) => {\n        if (response.success) {\n          response.merchant = new Merchant(response.response.merchant);\n          response.credentials = new OAuthCredentials(\n            response.response.credentials\n          );\n          delete response.response;\n        }\n\n        return response;\n      });\n    };\n  }\n}\n\nmodule.exports = { MerchantGateway: wrapPrototype(MerchantGateway) };\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,OAAO;AAC1C,IAAIE,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC,CAACC,QAAQ;AAC7C,IAAIC,gBAAgB,GAAGF,OAAO,CAAC,qBAAqB,CAAC,CAACE,gBAAgB;AACtE,IAAIC,aAAa,GAAGH,OAAO,CAAC,yBAAyB,CAAC,CAACG,aAAa;AAEpE,MAAMC,eAAe,SAASL,OAAO,CAAC;EACpCM,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,OAAO,CAACC,MAAM;EACnC;EAEAC,MAAMA,CAACC,UAAU,EAAE;IACjB,OAAO,IAAI,CAACH,OAAO,CAACI,IAAI,CACrBC,IAAI,CAAC,2BAA2B,EAAE;MAAEC,QAAQ,EAAEH;IAAW,CAAC,CAAC,CAC3DI,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC,CAAC,CAAC;EACjC;EAEAA,eAAeA,CAAA,EAAG;IAChB,IAAIC,OAAO,GAAG,IAAI,CAACC,qBAAqB,CAAC,IAAI,EAAE,IAAI,CAAC;IAEpD,OAAO,UAAUC,OAAO,EAAE;MACxB,OAAOF,OAAO,CAACE,OAAO,CAAC,CAACJ,IAAI,CAAEK,QAAQ,IAAK;QACzC,IAAIA,QAAQ,CAACC,OAAO,EAAE;UACpBD,QAAQ,CAACN,QAAQ,GAAG,IAAIX,QAAQ,CAACiB,QAAQ,CAACA,QAAQ,CAACN,QAAQ,CAAC;UAC5DM,QAAQ,CAACE,WAAW,GAAG,IAAIlB,gBAAgB,CACzCgB,QAAQ,CAACA,QAAQ,CAACE,WACpB,CAAC;UACD,OAAOF,QAAQ,CAACA,QAAQ;QAC1B;QAEA,OAAOA,QAAQ;MACjB,CAAC,CAAC;IACJ,CAAC;EACH;AACF;AAEAG,MAAM,CAACC,OAAO,GAAG;EAAElB,eAAe,EAAED,aAAa,CAACC,eAAe;AAAE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}