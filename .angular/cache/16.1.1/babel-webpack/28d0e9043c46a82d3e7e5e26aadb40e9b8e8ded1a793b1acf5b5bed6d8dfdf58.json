{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable no-console */\nconst {\n  Gateway\n} = require(\"./gateway\");\nconst {\n  CreditCard\n} = require(\"./credit_card\");\nconst exceptions = require(\"./exceptions\");\nconst {\n  CreditCardSearch\n} = require(\"./credit_card_search\");\nconst {\n  wrapPrototype\n} = require(\"@braintree/wrap-promise\");\nclass CreditCardGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n  create(attributes) {\n    this._checkForDeprecatedAttributes(attributes);\n    return this.gateway.http.post(`${this.config.baseMerchantPath()}/payment_methods`, {\n      creditCard: attributes\n    }).then(this.responseHandler());\n  }\n  delete(token) {\n    let path = `${this.config.baseMerchantPath()}/payment_methods/credit_card/${token}`;\n    return this.gateway.http.delete(path);\n  }\n  find(token) {\n    if (token.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\")); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http.get(`${this.config.baseMerchantPath()}/payment_methods/credit_card/${token}`).then(function (response) {\n      return new CreditCard(response.creditCard);\n    });\n  }\n  fromNonce(nonce) {\n    if (nonce.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\")); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http.get(`${this.config.baseMerchantPath()}/payment_methods/from_nonce/${nonce}`).then(response => {\n      return new CreditCard(response.creditCard);\n    }).catch(err => {\n      err.message = `Payment method with nonce ${nonce} locked, consumed or not found`;\n      return Promise.reject(err);\n    });\n  }\n  update(token, attributes) {\n    this._checkForDeprecatedAttributes(attributes);\n    return this.gateway.http.put(`${this.config.baseMerchantPath()}/payment_methods/credit_card/${token}`, {\n      creditCard: attributes\n    }).then(this.responseHandler());\n  }\n  responseHandler() {\n    return this.createResponseHandler(\"creditCard\", CreditCard);\n  }\n  expired(callback) {\n    const searchUrl = `${this.config.baseMerchantPath()}/payment_methods/all/expired_ids`;\n    const search = new CreditCardSearch();\n    const pagingFunction = this.pagingFunctionGenerator(search, \"payment_methods/all/expired\");\n    return this.createSearchResponse(searchUrl, search, pagingFunction, callback);\n  }\n  expiringBetween(startDate, endDate, callback) {\n    const query = `start=${this.dateFormat(startDate)}&end=${this.dateFormat(endDate)}`;\n    const searchUrl = `${this.config.baseMerchantPath()}/payment_methods/all/expiring_ids?${query}`;\n    const search = new CreditCardSearch();\n    const pagingFunction = this.pagingFunctionGenerator(search, `payment_methods/all/expiring?${query}`);\n    return this.createSearchResponse(searchUrl, search, pagingFunction, callback);\n  }\n  dateFormat(date) {\n    let month = date.getMonth() + 1;\n    if (month < 10) {\n      month = `0${month}`;\n    } else {\n      month = `${month}`;\n    }\n    return month + date.getFullYear();\n  }\n  pagingFunctionGenerator(search, url) {\n    return super.pagingFunctionGenerator(search, url, CreditCard, \"paymentMethods\", response => response.paymentMethods.creditCard);\n  }\n  _checkForDeprecatedAttributes(attributes) {\n    if (attributes.deviceSessionId != null) {\n      console.warn(\"[DEPRECATED] `deviceSessionId` is a deprecated param for CreditCard objects. Use `deviceData` instead\");\n    }\n    if (attributes.fraudMerchantId != null) {\n      console.warn(\"[DEPRECATED] `fraudMerchantId` is a deprecated param for CreditCard objects. Use `deviceData` instead\");\n    }\n    if (attributes.venmoSdkPaymentMethodCode != null) {\n      console.warn(\"The Venmo SDK integration is Unsupported. Please update your integration to use Pay with Venmo instead (https://developer.paypal.com/braintree/docs/guides/venmo/overview)\");\n    }\n    if (attributes.options != null && attributes.options.venmoSdkSession != null) {\n      console.warn(\"The Venmo SDK integration is Unsupported. Please update your integration to use Pay with Venmo instead (https://developer.paypal.com/braintree/docs/guides/venmo/overview)\");\n    }\n  }\n}\nmodule.exports = {\n  CreditCardGateway: wrapPrototype(CreditCardGateway, {\n    ignoreMethods: [\"expired\", \"expiringBetween\"]\n  })\n};","map":{"version":3,"names":["Gateway","require","CreditCard","exceptions","CreditCardSearch","wrapPrototype","CreditCardGateway","constructor","gateway","config","create","attributes","_checkForDeprecatedAttributes","http","post","baseMerchantPath","creditCard","then","responseHandler","delete","token","path","find","trim","Promise","reject","NotFoundError","get","response","fromNonce","nonce","catch","err","message","update","put","createResponseHandler","expired","callback","searchUrl","search","pagingFunction","pagingFunctionGenerator","createSearchResponse","expiringBetween","startDate","endDate","query","dateFormat","date","month","getMonth","getFullYear","url","paymentMethods","deviceSessionId","console","warn","fraudMerchantId","venmoSdkPaymentMethodCode","options","venmoSdkSession","module","exports","ignoreMethods"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/lib/braintree/credit_card_gateway.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable no-console */\nconst { Gateway } = require(\"./gateway\");\nconst { CreditCard } = require(\"./credit_card\");\nconst exceptions = require(\"./exceptions\");\nconst { CreditCardSearch } = require(\"./credit_card_search\");\nconst { wrapPrototype } = require(\"@braintree/wrap-promise\");\n\nclass CreditCardGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  create(attributes) {\n    this._checkForDeprecatedAttributes(attributes);\n\n    return this.gateway.http\n      .post(`${this.config.baseMerchantPath()}/payment_methods`, {\n        creditCard: attributes,\n      })\n      .then(this.responseHandler());\n  }\n\n  delete(token) {\n    let path = `${this.config.baseMerchantPath()}/payment_methods/credit_card/${token}`;\n\n    return this.gateway.http.delete(path);\n  }\n\n  find(token) {\n    if (token.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\")); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http\n      .get(\n        `${this.config.baseMerchantPath()}/payment_methods/credit_card/${token}`\n      )\n      .then(function (response) {\n        return new CreditCard(response.creditCard);\n      });\n  }\n\n  fromNonce(nonce) {\n    if (nonce.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\")); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http\n      .get(\n        `${this.config.baseMerchantPath()}/payment_methods/from_nonce/${nonce}`\n      )\n      .then((response) => {\n        return new CreditCard(response.creditCard);\n      })\n      .catch((err) => {\n        err.message = `Payment method with nonce ${nonce} locked, consumed or not found`;\n\n        return Promise.reject(err);\n      });\n  }\n\n  update(token, attributes) {\n    this._checkForDeprecatedAttributes(attributes);\n\n    return this.gateway.http\n      .put(\n        `${this.config.baseMerchantPath()}/payment_methods/credit_card/${token}`,\n        { creditCard: attributes }\n      )\n      .then(this.responseHandler());\n  }\n\n  responseHandler() {\n    return this.createResponseHandler(\"creditCard\", CreditCard);\n  }\n\n  expired(callback) {\n    const searchUrl = `${this.config.baseMerchantPath()}/payment_methods/all/expired_ids`;\n    const search = new CreditCardSearch();\n    const pagingFunction = this.pagingFunctionGenerator(\n      search,\n      \"payment_methods/all/expired\"\n    );\n\n    return this.createSearchResponse(\n      searchUrl,\n      search,\n      pagingFunction,\n      callback\n    );\n  }\n\n  expiringBetween(startDate, endDate, callback) {\n    const query = `start=${this.dateFormat(startDate)}&end=${this.dateFormat(\n      endDate\n    )}`;\n    const searchUrl = `${this.config.baseMerchantPath()}/payment_methods/all/expiring_ids?${query}`;\n    const search = new CreditCardSearch();\n    const pagingFunction = this.pagingFunctionGenerator(\n      search,\n      `payment_methods/all/expiring?${query}`\n    );\n\n    return this.createSearchResponse(\n      searchUrl,\n      search,\n      pagingFunction,\n      callback\n    );\n  }\n\n  dateFormat(date) {\n    let month = date.getMonth() + 1;\n\n    if (month < 10) {\n      month = `0${month}`;\n    } else {\n      month = `${month}`;\n    }\n\n    return month + date.getFullYear();\n  }\n\n  pagingFunctionGenerator(search, url) {\n    return super.pagingFunctionGenerator(\n      search,\n      url,\n      CreditCard,\n      \"paymentMethods\",\n      (response) => response.paymentMethods.creditCard\n    );\n  }\n\n  _checkForDeprecatedAttributes(attributes) {\n    if (attributes.deviceSessionId != null) {\n      console.warn(\n        \"[DEPRECATED] `deviceSessionId` is a deprecated param for CreditCard objects. Use `deviceData` instead\"\n      );\n    }\n\n    if (attributes.fraudMerchantId != null) {\n      console.warn(\n        \"[DEPRECATED] `fraudMerchantId` is a deprecated param for CreditCard objects. Use `deviceData` instead\"\n      );\n    }\n\n    if (attributes.venmoSdkPaymentMethodCode != null) {\n      console.warn(\n        \"The Venmo SDK integration is Unsupported. Please update your integration to use Pay with Venmo instead (https://developer.paypal.com/braintree/docs/guides/venmo/overview)\"\n      );\n    }\n\n    if (\n      attributes.options != null &&\n      attributes.options.venmoSdkSession != null\n    ) {\n      console.warn(\n        \"The Venmo SDK integration is Unsupported. Please update your integration to use Pay with Venmo instead (https://developer.paypal.com/braintree/docs/guides/venmo/overview)\"\n      );\n    }\n  }\n}\n\nmodule.exports = {\n  CreditCardGateway: wrapPrototype(CreditCardGateway, {\n    ignoreMethods: [\"expired\", \"expiringBetween\"],\n  }),\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}