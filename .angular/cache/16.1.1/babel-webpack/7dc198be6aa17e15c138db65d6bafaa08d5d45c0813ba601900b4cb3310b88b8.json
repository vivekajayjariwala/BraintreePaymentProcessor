{"ast":null,"code":"\"use strict\";\n\nlet Gateway = require(\"./gateway\").Gateway;\nlet UsBankAccount = require(\"./us_bank_account\").UsBankAccount;\nlet TransactionGateway = require(\"./transaction_gateway\").TransactionGateway;\nlet exceptions = require(\"./exceptions\");\nlet wrapPrototype = require(\"@braintree/wrap-promise\").wrapPrototype;\nclass UsBankAccountGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n  find(token) {\n    if (token.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\"), null); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http.get(`${this.config.baseMerchantPath()}/payment_methods/us_bank_account/${token}`).then(function (response) {\n      return new UsBankAccount(response.usBankAccount);\n    });\n  }\n  sale(token, transactionRequest) {\n    transactionRequest.paymentMethodToken = token;\n    if (!transactionRequest.options) {\n      transactionRequest.options = {};\n    }\n    transactionRequest.options.submitForSettlement = true;\n    return new TransactionGateway(this.gateway).sale(transactionRequest);\n  }\n}\nmodule.exports = {\n  UsBankAccountGateway: wrapPrototype(UsBankAccountGateway)\n};","map":{"version":3,"names":["Gateway","require","UsBankAccount","TransactionGateway","exceptions","wrapPrototype","UsBankAccountGateway","constructor","gateway","config","find","token","trim","Promise","reject","NotFoundError","http","get","baseMerchantPath","then","response","usBankAccount","sale","transactionRequest","paymentMethodToken","options","submitForSettlement","module","exports"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/lib/braintree/us_bank_account_gateway.js"],"sourcesContent":["\"use strict\";\n\nlet Gateway = require(\"./gateway\").Gateway;\nlet UsBankAccount = require(\"./us_bank_account\").UsBankAccount;\nlet TransactionGateway = require(\"./transaction_gateway\").TransactionGateway;\nlet exceptions = require(\"./exceptions\");\nlet wrapPrototype = require(\"@braintree/wrap-promise\").wrapPrototype;\n\nclass UsBankAccountGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  find(token) {\n    if (token.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\"), null); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http\n      .get(\n        `${this.config.baseMerchantPath()}/payment_methods/us_bank_account/${token}`\n      )\n      .then(function (response) {\n        return new UsBankAccount(response.usBankAccount);\n      });\n  }\n\n  sale(token, transactionRequest) {\n    transactionRequest.paymentMethodToken = token;\n    if (!transactionRequest.options) {\n      transactionRequest.options = {};\n    }\n    transactionRequest.options.submitForSettlement = true;\n\n    return new TransactionGateway(this.gateway).sale(transactionRequest);\n  }\n}\n\nmodule.exports = { UsBankAccountGateway: wrapPrototype(UsBankAccountGateway) };\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,OAAO;AAC1C,IAAIE,aAAa,GAAGD,OAAO,CAAC,mBAAmB,CAAC,CAACC,aAAa;AAC9D,IAAIC,kBAAkB,GAAGF,OAAO,CAAC,uBAAuB,CAAC,CAACE,kBAAkB;AAC5E,IAAIC,UAAU,GAAGH,OAAO,CAAC,cAAc,CAAC;AACxC,IAAII,aAAa,GAAGJ,OAAO,CAAC,yBAAyB,CAAC,CAACI,aAAa;AAEpE,MAAMC,oBAAoB,SAASN,OAAO,CAAC;EACzCO,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,OAAO,CAACC,MAAM;EACnC;EAEAC,IAAIA,CAACC,KAAK,EAAE;IACV,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvB,OAAOC,OAAO,CAACC,MAAM,CAACV,UAAU,CAACW,aAAa,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACtE;;IAEA,OAAO,IAAI,CAACP,OAAO,CAACQ,IAAI,CACrBC,GAAG,CACD,GAAE,IAAI,CAACR,MAAM,CAACS,gBAAgB,CAAC,CAAE,oCAAmCP,KAAM,EAC7E,CAAC,CACAQ,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACxB,OAAO,IAAIlB,aAAa,CAACkB,QAAQ,CAACC,aAAa,CAAC;IAClD,CAAC,CAAC;EACN;EAEAC,IAAIA,CAACX,KAAK,EAAEY,kBAAkB,EAAE;IAC9BA,kBAAkB,CAACC,kBAAkB,GAAGb,KAAK;IAC7C,IAAI,CAACY,kBAAkB,CAACE,OAAO,EAAE;MAC/BF,kBAAkB,CAACE,OAAO,GAAG,CAAC,CAAC;IACjC;IACAF,kBAAkB,CAACE,OAAO,CAACC,mBAAmB,GAAG,IAAI;IAErD,OAAO,IAAIvB,kBAAkB,CAAC,IAAI,CAACK,OAAO,CAAC,CAACc,IAAI,CAACC,kBAAkB,CAAC;EACtE;AACF;AAEAI,MAAM,CAACC,OAAO,GAAG;EAAEtB,oBAAoB,EAAED,aAAa,CAACC,oBAAoB;AAAE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}