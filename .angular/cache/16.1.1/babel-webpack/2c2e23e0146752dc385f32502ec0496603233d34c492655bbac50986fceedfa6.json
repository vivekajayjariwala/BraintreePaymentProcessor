{"ast":null,"code":"\"use strict\";\n\nlet Gateway = require(\"./gateway\").Gateway;\nlet SepaDirectDebitAccount = require(\"./sepa_direct_debit_account\").SepaDirectDebitAccount;\nlet exceptions = require(\"./exceptions\");\nlet wrapPrototype = require(\"@braintree/wrap-promise\").wrapPrototype;\nclass SepaDirectDebitAccountGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n  find(token) {\n    if (token.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\"), null); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http.get(`${this.config.baseMerchantPath()}/payment_methods/sepa_debit_account/${token}`).then(response => {\n      return new SepaDirectDebitAccount(response.sepaDebitAccount);\n    });\n  }\n  delete(token) {\n    let path = `${this.config.baseMerchantPath()}/payment_methods/sepa_debit_account/${token}`;\n    return this.gateway.http.delete(path);\n  }\n  responseHandler() {\n    return this.createResponseHandler(\"sepa_direct_debitAccount\", SepaDirectDebitAccount);\n  }\n}\nmodule.exports = {\n  SepaDirectDebitAccountGateway: wrapPrototype(SepaDirectDebitAccountGateway)\n};","map":{"version":3,"names":["Gateway","require","SepaDirectDebitAccount","exceptions","wrapPrototype","SepaDirectDebitAccountGateway","constructor","gateway","config","find","token","trim","Promise","reject","NotFoundError","http","get","baseMerchantPath","then","response","sepaDebitAccount","delete","path","responseHandler","createResponseHandler","module","exports"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/lib/braintree/sepa_direct_debit_account_gateway.js"],"sourcesContent":["\"use strict\";\n\nlet Gateway = require(\"./gateway\").Gateway;\nlet SepaDirectDebitAccount =\n  require(\"./sepa_direct_debit_account\").SepaDirectDebitAccount;\nlet exceptions = require(\"./exceptions\");\nlet wrapPrototype = require(\"@braintree/wrap-promise\").wrapPrototype;\n\nclass SepaDirectDebitAccountGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  find(token) {\n    if (token.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\"), null); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http\n      .get(\n        `${this.config.baseMerchantPath()}/payment_methods/sepa_debit_account/${token}`\n      )\n      .then((response) => {\n        return new SepaDirectDebitAccount(response.sepaDebitAccount);\n      });\n  }\n\n  delete(token) {\n    let path = `${this.config.baseMerchantPath()}/payment_methods/sepa_debit_account/${token}`;\n\n    return this.gateway.http.delete(path);\n  }\n\n  responseHandler() {\n    return this.createResponseHandler(\n      \"sepa_direct_debitAccount\",\n      SepaDirectDebitAccount\n    );\n  }\n}\n\nmodule.exports = {\n  SepaDirectDebitAccountGateway: wrapPrototype(SepaDirectDebitAccountGateway),\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,OAAO;AAC1C,IAAIE,sBAAsB,GACxBD,OAAO,CAAC,6BAA6B,CAAC,CAACC,sBAAsB;AAC/D,IAAIC,UAAU,GAAGF,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIG,aAAa,GAAGH,OAAO,CAAC,yBAAyB,CAAC,CAACG,aAAa;AAEpE,MAAMC,6BAA6B,SAASL,OAAO,CAAC;EAClDM,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,OAAO,CAACC,MAAM;EACnC;EAEAC,IAAIA,CAACC,KAAK,EAAE;IACV,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvB,OAAOC,OAAO,CAACC,MAAM,CAACV,UAAU,CAACW,aAAa,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACtE;;IAEA,OAAO,IAAI,CAACP,OAAO,CAACQ,IAAI,CACrBC,GAAG,CACD,GAAE,IAAI,CAACR,MAAM,CAACS,gBAAgB,CAAC,CAAE,uCAAsCP,KAAM,EAChF,CAAC,CACAQ,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAO,IAAIjB,sBAAsB,CAACiB,QAAQ,CAACC,gBAAgB,CAAC;IAC9D,CAAC,CAAC;EACN;EAEAC,MAAMA,CAACX,KAAK,EAAE;IACZ,IAAIY,IAAI,GAAI,GAAE,IAAI,CAACd,MAAM,CAACS,gBAAgB,CAAC,CAAE,uCAAsCP,KAAM,EAAC;IAE1F,OAAO,IAAI,CAACH,OAAO,CAACQ,IAAI,CAACM,MAAM,CAACC,IAAI,CAAC;EACvC;EAEAC,eAAeA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACC,qBAAqB,CAC/B,0BAA0B,EAC1BtB,sBACF,CAAC;EACH;AACF;AAEAuB,MAAM,CAACC,OAAO,GAAG;EACfrB,6BAA6B,EAAED,aAAa,CAACC,6BAA6B;AAC5E,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}