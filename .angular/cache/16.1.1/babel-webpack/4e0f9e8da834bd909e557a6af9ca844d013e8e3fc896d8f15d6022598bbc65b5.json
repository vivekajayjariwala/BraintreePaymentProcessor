{"ast":null,"code":"\"use strict\";\n\nlet Gateway = require(\"./gateway\").Gateway;\nlet Subscription = require(\"./subscription\").Subscription;\nlet SubscriptionSearch = require(\"./subscription_search\").SubscriptionSearch;\nlet TransactionGateway = require(\"./transaction_gateway\").TransactionGateway;\nlet exceptions = require(\"./exceptions\");\nlet wrapPrototype = require(\"@braintree/wrap-promise\").wrapPrototype;\nclass SubscriptionGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n  create(attributes) {\n    return this.gateway.http.post(`${this.config.baseMerchantPath()}/subscriptions`, {\n      subscription: attributes\n    }).then(this.responseHandler());\n  }\n  cancel(subscriptionId) {\n    return this.gateway.http.put(`${this.config.baseMerchantPath()}/subscriptions/${subscriptionId}/cancel`, null).then(this.responseHandler());\n  }\n  find(subscriptionId) {\n    if (subscriptionId.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\"), null); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http.get(`${this.config.baseMerchantPath()}/subscriptions/${subscriptionId}`).then(response => {\n      return new Subscription(response.subscription, this.gateway);\n    });\n  }\n  responseHandler() {\n    return this.createResponseHandler(\"subscription\", Subscription);\n  }\n  retryCharge(subscriptionId, amount, submitForSettlement) {\n    if (typeof amount === \"function\") {\n      amount = undefined; // eslint-disable-line no-undefined\n    }\n\n    if (typeof submitForSettlement === \"function\") {\n      submitForSettlement = false; // eslint-disable-line no-undefined\n    }\n\n    return new TransactionGateway(this.gateway).sale({\n      amount: amount,\n      subscriptionId,\n      options: {\n        submitForSettlement: submitForSettlement\n      }\n    });\n  }\n  search(fn, callback) {\n    let search = new SubscriptionSearch();\n    fn(search);\n    return this.createSearchResponse(`${this.config.baseMerchantPath()}/subscriptions/advanced_search_ids`, search, this.pagingFunctionGenerator(search), callback);\n  }\n  update(subscriptionId, attributes) {\n    return this.gateway.http.put(`${this.config.baseMerchantPath()}/subscriptions/${subscriptionId}`, {\n      subscription: attributes\n    }).then(this.responseHandler());\n  }\n  pagingFunctionGenerator(search) {\n    return super.pagingFunctionGenerator(search, \"subscriptions/advanced_search\", Subscription, \"subscriptions\", response => response.subscriptions.subscription);\n  }\n}\nmodule.exports = {\n  SubscriptionGateway: wrapPrototype(SubscriptionGateway, {\n    ignoreMethods: [\"search\"]\n  })\n};","map":{"version":3,"names":["Gateway","require","Subscription","SubscriptionSearch","TransactionGateway","exceptions","wrapPrototype","SubscriptionGateway","constructor","gateway","config","create","attributes","http","post","baseMerchantPath","subscription","then","responseHandler","cancel","subscriptionId","put","find","trim","Promise","reject","NotFoundError","get","response","createResponseHandler","retryCharge","amount","submitForSettlement","undefined","sale","options","search","fn","callback","createSearchResponse","pagingFunctionGenerator","update","subscriptions","module","exports","ignoreMethods"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/lib/braintree/subscription_gateway.js"],"sourcesContent":["\"use strict\";\n\nlet Gateway = require(\"./gateway\").Gateway;\nlet Subscription = require(\"./subscription\").Subscription;\nlet SubscriptionSearch = require(\"./subscription_search\").SubscriptionSearch;\nlet TransactionGateway = require(\"./transaction_gateway\").TransactionGateway;\nlet exceptions = require(\"./exceptions\");\nlet wrapPrototype = require(\"@braintree/wrap-promise\").wrapPrototype;\n\nclass SubscriptionGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  create(attributes) {\n    return this.gateway.http\n      .post(`${this.config.baseMerchantPath()}/subscriptions`, {\n        subscription: attributes,\n      })\n      .then(this.responseHandler());\n  }\n\n  cancel(subscriptionId) {\n    return this.gateway.http\n      .put(\n        `${this.config.baseMerchantPath()}/subscriptions/${subscriptionId}/cancel`,\n        null\n      )\n      .then(this.responseHandler());\n  }\n\n  find(subscriptionId) {\n    if (subscriptionId.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\"), null); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http\n      .get(`${this.config.baseMerchantPath()}/subscriptions/${subscriptionId}`)\n      .then((response) => {\n        return new Subscription(response.subscription, this.gateway);\n      });\n  }\n\n  responseHandler() {\n    return this.createResponseHandler(\"subscription\", Subscription);\n  }\n\n  retryCharge(subscriptionId, amount, submitForSettlement) {\n    if (typeof amount === \"function\") {\n      amount = undefined; // eslint-disable-line no-undefined\n    }\n\n    if (typeof submitForSettlement === \"function\") {\n      submitForSettlement = false; // eslint-disable-line no-undefined\n    }\n\n    return new TransactionGateway(this.gateway).sale({\n      amount: amount,\n      subscriptionId,\n      options: {\n        submitForSettlement: submitForSettlement,\n      },\n    });\n  }\n\n  search(fn, callback) {\n    let search = new SubscriptionSearch();\n\n    fn(search);\n\n    return this.createSearchResponse(\n      `${this.config.baseMerchantPath()}/subscriptions/advanced_search_ids`,\n      search,\n      this.pagingFunctionGenerator(search),\n      callback\n    );\n  }\n\n  update(subscriptionId, attributes) {\n    return this.gateway.http\n      .put(\n        `${this.config.baseMerchantPath()}/subscriptions/${subscriptionId}`,\n        { subscription: attributes }\n      )\n      .then(this.responseHandler());\n  }\n\n  pagingFunctionGenerator(search) {\n    return super.pagingFunctionGenerator(\n      search,\n      \"subscriptions/advanced_search\",\n      Subscription,\n      \"subscriptions\",\n      (response) => response.subscriptions.subscription\n    );\n  }\n}\n\nmodule.exports = {\n  SubscriptionGateway: wrapPrototype(SubscriptionGateway, {\n    ignoreMethods: [\"search\"],\n  }),\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}