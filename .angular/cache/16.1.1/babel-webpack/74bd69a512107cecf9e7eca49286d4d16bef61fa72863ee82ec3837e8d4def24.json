{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\nlet FormComponent = class FormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.userForm = this.fb.group({\n      name: ['', [Validators.required, Validators.pattern(/^[A-Za-z0-9-' ]+$/) // Regular expression pattern validator\n      ]],\n\n      number: ['', [Validators.pattern(/^\\d{13}$/) // Regular expression pattern validator for UPC code format\n      ]],\n\n      cvc: ['', [Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n      ]],\n\n      date: ['', [Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n      ]]\n    });\n  }\n\n  processPayment() {\n    console.log(this.userForm.value);\n  }\n};\nFormComponent = __decorate([Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})], FormComponent);\nexport { FormComponent };","map":{"version":3,"names":["Component","Validators","FormComponent","constructor","fb","userForm","group","name","required","pattern","number","cvc","date","processPayment","console","log","value","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Vivek Jariwala\\Documents\\AngularProjects\\BraintreePaymentProcessor\\src\\app\\form\\form.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent {\n\n  userForm = this.fb.group({\n    name: ['', [\n      Validators.required, // Required field validator\n      Validators.pattern(/^[A-Za-z0-9-' ]+$/) // Regular expression pattern validator\n    ]],\n    number: ['', [\n      Validators.pattern(/^\\d{13}$/) // Regular expression pattern validator for UPC code format\n    ]],\n    cvc: ['', [\n      Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n    ]],\n    date: ['', [\n      Validators.pattern(/^\\d{5}$/) // Regular expression pattern validator for UPC code format\n    ]],\n  });\n\n  constructor(private fb: FormBuilder) {};\n  processPayment() {\n    console.log(this.userForm.value);\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAqBC,UAAU,QAAO,gBAAgB;AAOtD,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAkBxBC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IAhBtB,KAAAC,QAAQ,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACvBC,IAAI,EAAE,CAAC,EAAE,EAAE,CACTN,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACQ,OAAO,CAAC,mBAAmB,CAAC,CAAC;MAAA,CACzC,CAAC;;MACFC,MAAM,EAAE,CAAC,EAAE,EAAE,CACXT,UAAU,CAACQ,OAAO,CAAC,UAAU,CAAC,CAAC;MAAA,CAChC,CAAC;;MACFE,GAAG,EAAE,CAAC,EAAE,EAAE,CACRV,UAAU,CAACQ,OAAO,CAAC,SAAS,CAAC,CAAC;MAAA,CAC/B,CAAC;;MACFG,IAAI,EAAE,CAAC,EAAE,EAAE,CACTX,UAAU,CAACQ,OAAO,CAAC,SAAS,CAAC,CAAC;MAAA,CAC/B;KACF,CAAC;EAEoC;;EACtCI,cAAcA,CAAA;IACZC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,QAAQ,CAACW,KAAK,CAAC;EAClC;CAED;AAvBYd,aAAa,GAAAe,UAAA,EALzBjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWlB,aAAa,CAuBzB;SAvBYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}