{"ast":null,"code":"\"use strict\";\n\nlet Gateway = require(\"./gateway\").Gateway;\nlet TransactionLineItem = require(\"./transaction_line_item\").TransactionLineItem;\nlet exceptions = require(\"./exceptions\");\nlet wrapPrototype = require(\"@braintree/wrap-promise\").wrapPrototype;\nclass TransactionLineItemGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n  findAll(transactionId) {\n    if (transactionId.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\"), null); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http.get(`${this.config.baseMerchantPath()}/transactions/${transactionId}/line_items`).then(response => {\n      return response.lineItems.map(function (lineItem) {\n        return new TransactionLineItem(lineItem);\n      });\n    });\n  }\n}\nmodule.exports = {\n  TransactionLineItemGateway: wrapPrototype(TransactionLineItemGateway, {})\n};","map":{"version":3,"names":["Gateway","require","TransactionLineItem","exceptions","wrapPrototype","TransactionLineItemGateway","constructor","gateway","config","findAll","transactionId","trim","Promise","reject","NotFoundError","http","get","baseMerchantPath","then","response","lineItems","map","lineItem","module","exports"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/lib/braintree/transaction_line_item_gateway.js"],"sourcesContent":["\"use strict\";\n\nlet Gateway = require(\"./gateway\").Gateway;\nlet TransactionLineItem =\n  require(\"./transaction_line_item\").TransactionLineItem;\nlet exceptions = require(\"./exceptions\");\nlet wrapPrototype = require(\"@braintree/wrap-promise\").wrapPrototype;\n\nclass TransactionLineItemGateway extends Gateway {\n  constructor(gateway) {\n    super();\n    this.gateway = gateway;\n    this.config = this.gateway.config;\n  }\n\n  findAll(transactionId) {\n    if (transactionId.trim() === \"\") {\n      return Promise.reject(exceptions.NotFoundError(\"Not Found\"), null); // eslint-disable-line new-cap\n    }\n\n    return this.gateway.http\n      .get(\n        `${this.config.baseMerchantPath()}/transactions/${transactionId}/line_items`\n      )\n      .then((response) => {\n        return response.lineItems.map(function (lineItem) {\n          return new TransactionLineItem(lineItem);\n        });\n      });\n  }\n}\n\nmodule.exports = {\n  TransactionLineItemGateway: wrapPrototype(TransactionLineItemGateway, {}),\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,OAAO;AAC1C,IAAIE,mBAAmB,GACrBD,OAAO,CAAC,yBAAyB,CAAC,CAACC,mBAAmB;AACxD,IAAIC,UAAU,GAAGF,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIG,aAAa,GAAGH,OAAO,CAAC,yBAAyB,CAAC,CAACG,aAAa;AAEpE,MAAMC,0BAA0B,SAASL,OAAO,CAAC;EAC/CM,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAAC,CAAC;IACP,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,OAAO,CAACC,MAAM;EACnC;EAEAC,OAAOA,CAACC,aAAa,EAAE;IACrB,IAAIA,aAAa,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC/B,OAAOC,OAAO,CAACC,MAAM,CAACV,UAAU,CAACW,aAAa,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACtE;;IAEA,OAAO,IAAI,CAACP,OAAO,CAACQ,IAAI,CACrBC,GAAG,CACD,GAAE,IAAI,CAACR,MAAM,CAACS,gBAAgB,CAAC,CAAE,iBAAgBP,aAAc,aAClE,CAAC,CACAQ,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,SAAS,CAACC,GAAG,CAAC,UAAUC,QAAQ,EAAE;QAChD,OAAO,IAAIpB,mBAAmB,CAACoB,QAAQ,CAAC;MAC1C,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;AACF;AAEAC,MAAM,CAACC,OAAO,GAAG;EACfnB,0BAA0B,EAAED,aAAa,CAACC,0BAA0B,EAAE,CAAC,CAAC;AAC1E,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}