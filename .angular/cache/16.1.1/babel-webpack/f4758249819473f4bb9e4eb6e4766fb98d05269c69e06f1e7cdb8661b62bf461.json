{"ast":null,"code":"/* eslint-disable */\n/*\n * querystring-stringify.js\n *   - node.js module providing 'stringify' method for converting objects to query strings.\n *\n * Chad Etzel\n *\n * Based on YUI \"querystring-stringify.js\" module\n * http://github.com/isaacs/yui3/tree/master/src/querystring/js\n *\n * Copyright (c) 2009, Yahoo! Inc. and Chad Etzel\n * BSD License (see LICENSE.md for info)\n *\n */\n\nvar util = require(\"./util\");\nexports.stringify = querystring_stringify;\nvar stack = [];\n/**\n * <p>Converts an arbitrary value to a Query String representation.</p>\n *\n * <p>Objects with cyclical references will trigger an exception.</p>\n *\n * @method stringify\n * @param obj {Variant} any arbitrary value to convert to query string\n * @param sep {String} (optional) Character that should join param k=v pairs together. Default: \"&\"\n * @param eq  {String} (optional) Character that should join keys to their values. Default: \"=\"\n * @param name {String} (optional) Name of the current key, for handling children recursively.\n * @param escape {Function} (optional) Function for escaping. Default: encodeURIComponent\n */\nfunction querystring_stringify(obj, sep, eq, name, escape) {\n  sep = sep || \"&\";\n  eq = eq || \"=\";\n  escape = escape || encodeURIComponent;\n  if (util.isNull(obj) || util.isUndefined(obj) || typeof obj === 'function') {\n    return name ? escape(name) + eq : '';\n  }\n  if (util.isBoolean(obj)) obj = +obj;\n  if (util.isNumber(obj) || util.isString(obj)) {\n    return escape(name) + eq + escape(obj);\n  }\n  if (util.isArray(obj)) {\n    var s = [];\n    name = name + '[]';\n    for (var i = 0, l = obj.length; i < l; i++) {\n      s.push(querystring_stringify(obj[i], sep, eq, name, escape));\n    }\n    return s.join(sep);\n  }\n\n  // Check for cyclical references in nested objects\n  for (var i = stack.length - 1; i >= 0; --i) if (stack[i] === obj) {\n    throw new Error(\"querystring_stringify. Cyclical reference\");\n  }\n  stack.push(obj);\n  var s = [];\n  var begin = name ? name + '[' : '';\n  var end = name ? ']' : '';\n  for (var i in obj) if (obj.hasOwnProperty(i)) {\n    var n = begin + i + end;\n    s.push(querystring_stringify(obj[i], sep, eq, n, escape));\n  }\n  stack.pop();\n  s = s.join(sep);\n  if (!s && name) return name + \"=\";\n  return s;\n}\n;","map":{"version":3,"names":["util","require","exports","stringify","querystring_stringify","stack","obj","sep","eq","name","escape","encodeURIComponent","isNull","isUndefined","isBoolean","isNumber","isString","isArray","s","i","l","length","push","join","Error","begin","end","hasOwnProperty","n","pop"],"sources":["C:/Users/Vivek Jariwala/Documents/AngularProjects/BraintreePaymentProcessor/node_modules/braintree/vendor/querystring.node.js.511d6a2/querystring-stringify.js"],"sourcesContent":["/* eslint-disable */\n/*\n * querystring-stringify.js\n *   - node.js module providing 'stringify' method for converting objects to query strings.\n *\n * Chad Etzel\n *\n * Based on YUI \"querystring-stringify.js\" module\n * http://github.com/isaacs/yui3/tree/master/src/querystring/js\n *\n * Copyright (c) 2009, Yahoo! Inc. and Chad Etzel\n * BSD License (see LICENSE.md for info)\n *\n */\n\nvar util = require(\"./util\");\n\nexports.stringify = querystring_stringify;\n\nvar stack = [];\n/**\n * <p>Converts an arbitrary value to a Query String representation.</p>\n *\n * <p>Objects with cyclical references will trigger an exception.</p>\n *\n * @method stringify\n * @param obj {Variant} any arbitrary value to convert to query string\n * @param sep {String} (optional) Character that should join param k=v pairs together. Default: \"&\"\n * @param eq  {String} (optional) Character that should join keys to their values. Default: \"=\"\n * @param name {String} (optional) Name of the current key, for handling children recursively.\n * @param escape {Function} (optional) Function for escaping. Default: encodeURIComponent\n */\nfunction querystring_stringify (obj, sep, eq, name, escape) {\n  sep = sep || \"&\";\n  eq = eq || \"=\";\n  escape = escape || encodeURIComponent;\n\n  if (util.isNull(obj) || util.isUndefined(obj) || typeof(obj) === 'function') {\n    return name ? escape(name) + eq : '';\n  }\n\n  if (util.isBoolean(obj)) obj = +obj;\n  if (util.isNumber(obj) || util.isString(obj)) {\n    return escape(name) + eq + escape(obj);\n  }\n  if (util.isArray(obj)) {\n    var s = [];\n    name = name+'[]';\n    for (var i = 0, l = obj.length; i < l; i ++) {\n      s.push( querystring_stringify(obj[i], sep, eq, name, escape) );\n    }\n    return s.join(sep);\n  }\n\n  // Check for cyclical references in nested objects\n  for (var i = stack.length - 1; i >= 0; --i) if (stack[i] === obj) {\n    throw new Error(\"querystring_stringify. Cyclical reference\");\n  }\n\n  stack.push(obj);\n\n  var s = [];\n  var begin = name ? name + '[' : '';\n  var end = name ? ']' : '';\n  for (var i in obj) if (obj.hasOwnProperty(i)) {\n    var n = begin + i + end;\n    s.push(querystring_stringify(obj[i], sep, eq, n, escape));\n  }\n\n  stack.pop();\n\n  s = s.join(sep);\n  if (!s && name) return name + \"=\";\n  return s;\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}